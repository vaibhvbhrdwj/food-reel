import { APIResource } from "../../core/resource.js";
import * as FilesAPI from "./files.js";
import { APIPromise } from "../../core/api-promise.js";
import { RequestOptions } from "../../internal/request-options.js";
export declare class Metadata extends APIResource {
    /**
     * You can programmatically get image EXIF, pHash, and other metadata for uploaded
     * files in the ImageKit.io media library using this API.
     *
     * You can also get the metadata in upload API response by passing `metadata` in
     * `responseFields` parameter.
     *
     * @example
     * ```ts
     * const metadata = await client.files.metadata.get('fileId');
     * ```
     */
    get(fileID: string, options?: RequestOptions): APIPromise<FilesAPI.Metadata>;
    /**
     * Get image EXIF, pHash, and other metadata from ImageKit.io powered remote URL
     * using this API.
     *
     * @example
     * ```ts
     * const metadata = await client.files.metadata.getFromURL({
     *   url: 'https://example.com',
     * });
     * ```
     */
    getFromURL(query: MetadataGetFromURLParams, options?: RequestOptions): APIPromise<FilesAPI.Metadata>;
}
export interface MetadataGetFromURLParams {
    /**
     * Should be a valid file URL. It should be accessible using your ImageKit.io
     * account.
     */
    url: string;
}
export declare namespace Metadata {
    export { type MetadataGetFromURLParams as MetadataGetFromURLParams };
}
//# sourceMappingURL=metadata.d.ts.map