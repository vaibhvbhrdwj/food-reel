"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metadata = void 0;
const resource_1 = require("../../core/resource.js");
const path_1 = require("../../internal/utils/path.js");
class Metadata extends resource_1.APIResource {
    /**
     * You can programmatically get image EXIF, pHash, and other metadata for uploaded
     * files in the ImageKit.io media library using this API.
     *
     * You can also get the metadata in upload API response by passing `metadata` in
     * `responseFields` parameter.
     *
     * @example
     * ```ts
     * const metadata = await client.files.metadata.get('fileId');
     * ```
     */
    get(fileID, options) {
        return this._client.get((0, path_1.path) `/v1/files/${fileID}/metadata`, options);
    }
    /**
     * Get image EXIF, pHash, and other metadata from ImageKit.io powered remote URL
     * using this API.
     *
     * @example
     * ```ts
     * const metadata = await client.files.metadata.getFromURL({
     *   url: 'https://example.com',
     * });
     * ```
     */
    getFromURL(query, options) {
        return this._client.get('/v1/files/metadata', { query, ...options });
    }
}
exports.Metadata = Metadata;
//# sourceMappingURL=metadata.js.map