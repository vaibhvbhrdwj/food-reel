import { APIResource } from "../core/resource.mjs";
import type { ImageKit } from "../client.mjs";
import type { SrcOptions, Transformation } from "./shared.mjs";
export declare class Helper extends APIResource {
    constructor(client: ImageKit);
    /**
     * Builds a source URL with the given options.
     *
     * @param opts - The options for building the source URL.
     * @returns The constructed source URL.
     */
    buildSrc(opts: SrcOptions): string;
    /**
     * Builds a transformation string from the given transformations.
     *
     * @param transformation - The transformations to apply.
     * @returns The constructed transformation string.
     */
    buildTransformationString(transformation: Transformation[] | undefined): string;
    /**
     * Generates authentication parameters for client-side file uploads using ImageKit's Upload API V1.
     *
     * This method creates the required authentication signature that allows secure file uploads
     * directly from the browser or mobile applications without exposing your private API key.
     * The generated parameters include a unique token, expiration timestamp, and HMAC signature.
     *
     * @param token - Custom token for the upload session. If not provided, a UUID v4 will be generated automatically.
     * @param expire - Expiration time in seconds from now. If not provided, defaults to 1800 seconds (30 minutes).
     * @returns Authentication parameters object containing:
     *   - `token`: Unique identifier for this upload session
     *   - `expire`: Unix timestamp when these parameters expire
     *   - `signature`: HMAC-SHA1 signature for authenticating the upload
     *
     * @throws {Error} If the private API key is not configured (should not happen in normal usage)
     */
    getAuthenticationParameters(token?: string, expire?: number): {
        token: string;
        expire: number;
        signature: string;
    };
}
//# sourceMappingURL=helper.d.mts.map