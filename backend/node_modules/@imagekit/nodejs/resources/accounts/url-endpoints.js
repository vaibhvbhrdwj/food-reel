"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.URLEndpoints = void 0;
const resource_1 = require("../../core/resource.js");
const headers_1 = require("../../internal/headers.js");
const path_1 = require("../../internal/utils/path.js");
class URLEndpoints extends resource_1.APIResource {
    /**
     * **Note:** This API is currently in beta.
     * Creates a new URL‑endpoint and returns the resulting object.
     *
     * @example
     * ```ts
     * const urlEndpointResponse =
     *   await client.accounts.urlEndpoints.create({
     *     description: 'My custom URL endpoint',
     *   });
     * ```
     */
    create(body, options) {
        return this._client.post('/v1/accounts/url-endpoints', { body, ...options });
    }
    /**
     * **Note:** This API is currently in beta.
     * Updates the URL‑endpoint identified by `id` and returns the updated object.
     *
     * @example
     * ```ts
     * const urlEndpointResponse =
     *   await client.accounts.urlEndpoints.update('id', {
     *     description: 'My custom URL endpoint',
     *   });
     * ```
     */
    update(id, body, options) {
        return this._client.put((0, path_1.path) `/v1/accounts/url-endpoints/${id}`, { body, ...options });
    }
    /**
     * **Note:** This API is currently in beta.
     * Returns an array of all URL‑endpoints configured including the default
     * URL-endpoint generated by ImageKit during account creation.
     *
     * @example
     * ```ts
     * const urlEndpointResponses =
     *   await client.accounts.urlEndpoints.list();
     * ```
     */
    list(options) {
        return this._client.get('/v1/accounts/url-endpoints', options);
    }
    /**
     * **Note:** This API is currently in beta.
     * Deletes the URL‑endpoint identified by `id`. You cannot delete the default
     * URL‑endpoint created by ImageKit during account creation.
     *
     * @example
     * ```ts
     * await client.accounts.urlEndpoints.delete('id');
     * ```
     */
    delete(id, options) {
        return this._client.delete((0, path_1.path) `/v1/accounts/url-endpoints/${id}`, {
            ...options,
            headers: (0, headers_1.buildHeaders)([{ Accept: '*/*' }, options?.headers]),
        });
    }
    /**
     * **Note:** This API is currently in beta.
     * Retrieves the URL‑endpoint identified by `id`.
     *
     * @example
     * ```ts
     * const urlEndpointResponse =
     *   await client.accounts.urlEndpoints.get('id');
     * ```
     */
    get(id, options) {
        return this._client.get((0, path_1.path) `/v1/accounts/url-endpoints/${id}`, options);
    }
}
exports.URLEndpoints = URLEndpoints;
//# sourceMappingURL=url-endpoints.js.map