// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
import { APIResource } from "../../core/resource.mjs";
import { buildHeaders } from "../../internal/headers.mjs";
import { path } from "../../internal/utils/path.mjs";
export class Origins extends APIResource {
    /**
     * **Note:** This API is currently in beta.
     * Creates a new origin and returns the origin object.
     *
     * @example
     * ```ts
     * const originResponse = await client.accounts.origins.create(
     *   {
     *     accessKey: 'AKIAIOSFODNN7EXAMPLE',
     *     bucket: 'product-images',
     *     name: 'US S3 Storage',
     *     secretKey: 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY',
     *     type: 'S3',
     *   },
     * );
     * ```
     */
    create(body, options) {
        return this._client.post('/v1/accounts/origins', { body, ...options });
    }
    /**
     * **Note:** This API is currently in beta.
     * Updates the origin identified by `id` and returns the updated origin object.
     *
     * @example
     * ```ts
     * const originResponse = await client.accounts.origins.update(
     *   'id',
     *   {
     *     accessKey: 'AKIAIOSFODNN7EXAMPLE',
     *     bucket: 'product-images',
     *     name: 'US S3 Storage',
     *     secretKey: 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY',
     *     type: 'S3',
     *   },
     * );
     * ```
     */
    update(id, body, options) {
        return this._client.put(path `/v1/accounts/origins/${id}`, { body, ...options });
    }
    /**
     * **Note:** This API is currently in beta.
     * Returns an array of all configured origins for the current account.
     *
     * @example
     * ```ts
     * const originResponses =
     *   await client.accounts.origins.list();
     * ```
     */
    list(options) {
        return this._client.get('/v1/accounts/origins', options);
    }
    /**
     * **Note:** This API is currently in beta.
     * Permanently removes the origin identified by `id`. If the origin is in use by
     * any URLâ€‘endpoints, the API will return an error.
     *
     * @example
     * ```ts
     * await client.accounts.origins.delete('id');
     * ```
     */
    delete(id, options) {
        return this._client.delete(path `/v1/accounts/origins/${id}`, {
            ...options,
            headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),
        });
    }
    /**
     * **Note:** This API is currently in beta.
     * Retrieves the origin identified by `id`.
     *
     * @example
     * ```ts
     * const originResponse = await client.accounts.origins.get(
     *   'id',
     * );
     * ```
     */
    get(id, options) {
        return this._client.get(path `/v1/accounts/origins/${id}`, options);
    }
}
//# sourceMappingURL=origins.mjs.map