"use strict";
// Transformation utilities ported from JavaScript SDK
// This file is in src/lib/ to avoid conflicts with generated code
Object.defineProperty(exports, "__esModule", { value: true });
exports.safeBtoa = exports.supportedTransforms = void 0;
const base64_1 = require("../internal/utils/base64.js");
const QUERY_TRANSFORMATION_POSITION = 'query';
const PATH_TRANSFORMATION_POSITION = 'path';
const CHAIN_TRANSFORM_DELIMITER = ':';
const TRANSFORM_DELIMITER = ',';
const TRANSFORM_KEY_VALUE_DELIMITER = '-';
/**
 * Supported transformations mapping
 * {@link https://imagekit.io/docs/transformations}
 */
exports.supportedTransforms = {
    // Basic sizing & layout
    width: 'w',
    height: 'h',
    aspectRatio: 'ar',
    background: 'bg',
    border: 'b',
    crop: 'c',
    cropMode: 'cm',
    dpr: 'dpr',
    focus: 'fo',
    quality: 'q',
    x: 'x',
    xCenter: 'xc',
    y: 'y',
    yCenter: 'yc',
    format: 'f',
    videoCodec: 'vc',
    audioCodec: 'ac',
    radius: 'r',
    rotation: 'rt',
    blur: 'bl',
    named: 'n',
    defaultImage: 'di',
    flip: 'fl',
    original: 'orig',
    startOffset: 'so',
    endOffset: 'eo',
    duration: 'du',
    streamingResolutions: 'sr',
    // AI & advanced effects
    grayscale: 'e-grayscale',
    aiUpscale: 'e-upscale',
    aiRetouch: 'e-retouch',
    aiVariation: 'e-genvar',
    aiDropShadow: 'e-dropshadow',
    aiChangeBackground: 'e-changebg',
    aiRemoveBackground: 'e-bgremove',
    aiRemoveBackgroundExternal: 'e-removedotbg',
    aiEdit: 'e-edit',
    contrastStretch: 'e-contrast',
    shadow: 'e-shadow',
    sharpen: 'e-sharpen',
    unsharpMask: 'e-usm',
    gradient: 'e-gradient',
    // Other flags & finishing
    progressive: 'pr',
    lossless: 'lo',
    colorProfile: 'cp',
    metadata: 'md',
    opacity: 'o',
    trim: 't',
    zoom: 'z',
    page: 'pg',
    // Text overlay transformations
    fontSize: 'fs',
    fontFamily: 'ff',
    fontColor: 'co',
    innerAlignment: 'ia',
    padding: 'pa',
    alpha: 'al',
    typography: 'tg',
    lineHeight: 'lh',
    // Subtitles transformations
    fontOutline: 'fol',
    fontShadow: 'fsh',
    // Raw pass-through
    raw: 'raw',
};
exports.default = {
    addAsQueryParameter: (options) => {
        return options.transformationPosition === QUERY_TRANSFORMATION_POSITION;
    },
    getTransformKey: function (transform) {
        if (!transform) {
            return '';
        }
        return exports.supportedTransforms[transform] || exports.supportedTransforms[transform.toLowerCase()] || '';
    },
    getChainTransformDelimiter: function () {
        return CHAIN_TRANSFORM_DELIMITER;
    },
    getTransformDelimiter: function () {
        return TRANSFORM_DELIMITER;
    },
    getTransformKeyValueDelimiter: function () {
        return TRANSFORM_KEY_VALUE_DELIMITER;
    },
};
const safeBtoa = function (str) {
    // Use the SDK's built-in base64 utility that properly handles different runtimes
    return (0, base64_1.toBase64)(str);
};
exports.safeBtoa = safeBtoa;
//# sourceMappingURL=transformation-utils.js.map